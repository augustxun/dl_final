# -*- coding: utf-8 -*-
"""image.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1O5svdA523udbzj67ENuy_aSC4XslPMS0
"""

import matplotlib.pyplot as plt
import numpy as np

# 数据定义
models = ['GT', 'GAT', 'GraphSAINT']  # 模型名称
datasets = ['PPI', 'ENZYMES', 'PROTEINS']  # 数据集名称

# ACC 数据
acc_values = {
    'GT': [0.0478, 0.3833, 0.7411],  # GT 模型在 PPI, ENZYMES, PROTEINS 上的 ACC
    'GAT': [0.7134, 0.4000, 0.7321],  # GAT 模型的 ACC
    'GraphSAINT': [0.0033, 0.0, 0.0]  # GraphSAINT 模型的 ACC
}
f1_values = {
    'GT': [0.8577, 0.3688, 0.7297],  # GT 模型在 PPI, ENZYMES, PROTEINS 上的 ACC
    'GAT': [0.975, 0.4051, 0.7214],  # GAT 模型的 ACC
    'GraphSAINT': [0.4213, 0.0, 0.0]  # GraphSAINT 模型的 ACC
}
AUC_values = {
    'GT': [0.9632, 0.6881, 0.3198],  # GT 模型在 PPI, ENZYMES, PROTEINS 上的 ACC
    'GAT': [0.9959, 0.7370, 0.3144],  # GAT 模型的 ACC
    'GraphSAINT': [0.6403, 0.0, 0.0]  # GraphSAINT 模型的 ACC
}


# 横坐标位置
x = np.arange(len(models))  # 模型的索引
width = 0.25  # 柱状图的宽度

# 绘制柱状图
fig, ax = plt.subplots(figsize=(8, 6))

# 为每个数据集绘制柱子
for i, dataset in enumerate(datasets):
    acc = [AUC_values[model][i] for model in models]
    ax.bar(x + i * width, acc, width, label=dataset)

# 添加标签与标题
ax.set_xlabel('Models')
ax.set_ylabel('Area under the curve (AUC)')
ax.set_title('Model Performance on Different Datasets (AUC)')
ax.set_xticks(x + width)
ax.set_xticklabels(models)
ax.legend(title='Datasets')

# 布局优化
plt.tight_layout()

# 显示图表
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# Data definition
models = ['GTNs', 'GAT', 'GraphSAINT']
datasets = ['PPI', 'ENZYMES', 'PROTEINS']

# Performance metrics
acc_values = {
    'GTNs': [0.0478, 0.3833, 0.7411],
    'GAT': [0.7134, 0.4000, 0.7321],
    'GraphSAINT': [0.0033, 0.0, 0.0]
}
f1_values = {
    'GTNs': [0.8577, 0.3688, 0.7297],
    'GAT': [0.975, 0.4051, 0.7214],
    'GraphSAINT': [0.4213, 0.0, 0.0]
}
AUC_values = {
    'GTNs': [0.9632, 0.6881, 0.3198],
    'GAT': [0.9959, 0.7370, 0.3144],
    'GraphSAINT': [0.6403, 0.0, 0.0]
}
time_values = {
    'GTNs': [7.4088, 0.5037, 1.0890],
    'GAT': [4.9433, 0.4142, 0.9263],
    'GraphSAINT': [0.5910, 0.0, 0.0]
}

# Create figure with 2x2 subplots
fig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2, 2, figsize=(15, 12))
width = 0.25
x = np.arange(len(models))

# Helper function to create bars
def create_bars(ax, metric_values, title, ylabel):
    for i, dataset in enumerate(datasets):
        values = [metric_values[model][i] for model in models]
        ax.bar(x + i * width, values, width, label=dataset)

    ax.set_xlabel('Models')
    ax.set_ylabel(ylabel)
    ax.set_title(title)
    ax.set_xticks(x + width)
    ax.set_xticklabels(models)
    ax.legend(title='Datasets')

# Create all four plots
create_bars(ax1, acc_values, 'Model Performance (Accuracy)', 'Accuracy')
create_bars(ax2, f1_values, 'Model Performance (F1)', 'F1 Score')
create_bars(ax3, AUC_values, 'Model Performance (AUC)', 'Area under the curve (AUC)')
create_bars(ax4, time_values, 'Model Performance (Time)', 'Time (seconds)')

# Adjust layout
plt.tight_layout()
plt.show()

"""GAT在PPI数据集上5个lr的变化, 画折线图"""

import numpy as np
import matplotlib.pyplot as plt

# 设置LaTeX字体
#plt.rcParams['text.usetex'] = True
#plt.rcParams['text.latex.preamble'] = r'\usepackage{amsmath}'


fig = plt.figure(figsize=(6,2.5))

# lr
x = np.array([1, 2, 3, 4, 5])
# f1
y1 = np.array([0.8217,	0.8864,	0.975,	0.9623,	0.9724])
# acc
y3 = np.array([0.0617,	0.1531,	0.7134,	0.6249,	0.7145])
# y3 = np.array([0.470925999,	0.483172197,	0.491417024,	0.490449447,	0.477157593])


# 绘制第一个子图
plt.subplot(121)
plt.grid(linestyle = '--', linewidth = 0.5, zorder=0)
plt.plot(x, y1, marker='^', label='LRAP', zorder=10, color='royalblue')
#plt.fill_between(x, y1 - std1, y1 + std1, alpha=0.2, zorder=10, color='lightsteelblue')
#plt.plot(x, y2, marker='^', label='GAUC', zorder=10)
#plt.fill_between(x, y2 - std2, y2 + std2, alpha=0.2, zorder=10)
plt.title('F1')
plt.xlabel(r'Learning rate')
plt.xticks(x, [r'$10^{-4}$', r'$50^{-4}$', r'$10^{-3}$', r'$50^{-3}$', r'$10^{-2}$'])
# 0.0001	0.0005	0.001	0.005	0.01
plt.ylim(0.7, 1.0)
plt.ylabel('PPI')
#plt.legend()

# 绘制第二个子图
plt.subplot(122)
plt.grid(linestyle = '--', linewidth = 0.5, zorder=0)
plt.plot(x, y3, marker='^', label='LRAP', zorder=10, color='royalblue')
#plt.fill_between(x, y3 - std3, y3 + std3, alpha=0.2, zorder=10, color='lightsteelblue')
#plt.plot(x, y4, marker='^', label='GAUC', zorder=10)
#plt.fill_between(x, y4 - std4, y4 + std4, alpha=0.2, zorder=10)
plt.title('ACC')
plt.xlabel(r'Learning rate')
plt.xticks(x, [r'$10^{-4}$', r'$50^{-4}$', r'$10^{-3}$', r'$50^{-3}$', r'$10^{-2}$'])
plt.ylim(0.01, 0.9)
#plt.ylabel('AUC')
#plt.legend()

fig.subplots_adjust(wspace=0.3)

plt.savefig('param_lr.pdf', format='pdf', dpi=800, bbox_inches='tight')
# 显示图形
plt.show()

import numpy as np
import matplotlib.pyplot as plt

# 设置LaTeX字体
#plt.rcParams['text.usetex'] = True
#plt.rcParams['text.latex.preamble'] = r'\usepackage{amsmath}'


fig = plt.figure(figsize=(6,2.5))

# lr
x = np.array([1, 2, 3, 4, 5])
# auc
y1 = np.array([0.9498,	0.9722,	0.9959,	0.9933,	0.9953])
# time
y3 = np.array([5.1412,	5.1150,	4.9433,	5.0628,	4.9679])
# y3 = np.array([0.470925999,	0.483172197,	0.491417024,	0.490449447,	0.477157593])


# 绘制第一个子图
plt.subplot(121)
plt.grid(linestyle = '--', linewidth = 0.5, zorder=0)
plt.plot(x, y1, marker='^', label='LRAP', zorder=10, color='royalblue')
#plt.fill_between(x, y1 - std1, y1 + std1, alpha=0.2, zorder=10, color='lightsteelblue')
#plt.plot(x, y2, marker='^', label='GAUC', zorder=10)
#plt.fill_between(x, y2 - std2, y2 + std2, alpha=0.2, zorder=10)
plt.title('AUC')
plt.xlabel(r'Learning rate')
plt.xticks(x, [r'$10^{-4}$', r'$50^{-4}$', r'$10^{-3}$', r'$50^{-3}$', r'$10^{-2}$'])
# 0.0001	0.0005	0.001	0.005	0.01
plt.ylim(0.9, 1)
plt.ylabel('PPI')
#plt.legend()

# 绘制第二个子图
plt.subplot(122)
plt.grid(linestyle = '--', linewidth = 0.5, zorder=0)
plt.plot(x, y3, marker='^', label='LRAP', zorder=10, color='royalblue')
#plt.fill_between(x, y3 - std3, y3 + std3, alpha=0.2, zorder=10, color='lightsteelblue')
#plt.plot(x, y4, marker='^', label='GAUC', zorder=10)
#plt.fill_between(x, y4 - std4, y4 + std4, alpha=0.2, zorder=10)
plt.title('TIME')
plt.xlabel(r'Learning rate')
plt.xticks(x, [r'$10^{-4}$', r'$50^{-4}$', r'$10^{-3}$', r'$50^{-3}$', r'$10^{-2}$'])
plt.ylim(4, 6)
#plt.ylabel('AUC')
#plt.legend()

fig.subplots_adjust(wspace=0.3)

plt.savefig('param_lr.pdf', format='pdf', dpi=800, bbox_inches='tight')
# 显示图形
plt.show()